name: Docker Image CI

on:
  push:
    tags:
      - '*'

env:
  IMAGE_NAME: webots
  CLOUD_IMAGE_NAME: webots.cloud
  DEFAULT_WEBOTS_VERSION: R2023b

jobs:
  dockerhub-publication:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        BASE_IMAGE: ["nvidia/cuda:11.8.0-base-ubuntu22.04"]
    steps:
    - uses: actions/checkout@v2
    - name: Determine Version
      run: |
        # Strip git ref prefix from version
        IMAGE_TAG=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,' | sed -e 's,\_.*,,')
        # Use Docker `latest` tag convention
        [ "$IMAGE_TAG" == "master" ] && IMAGE_TAG=latest
        # Webots version
        [ "$IMAGE_TAG" != "latest" ] && WEBOTS_VERSION=$IMAGE_TAG && IMAGE_TAG=$IMAGE_TAG-$(cut -d'-' -f3 <<<"${{ matrix.BASE_IMAGE }}")
        [ "$IMAGE_TAG" == "latest" ] && WEBOTS_VERSION=$DEFAULT_WEBOTS_VERSION
        # Display and save
        echo IMAGE_TAG=$IMAGE_TAG
        echo WEBOTS_VERSION=$WEBOTS_VERSION
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
        echo "WEBOTS_VERSION=${WEBOTS_VERSION}" >> $GITHUB_ENV
    - name: Build the Docker image
      run: |
        docker build . --file dockerfiles/Dockerfile.nvidia --tag $IMAGE_NAME:$IMAGE_TAG --build-arg WEBOTS_VERSION=$WEBOTS_VERSION --build-arg BASE_IMAGE=${{ matrix.BASE_IMAGE }} --build-arg WEBOTS_PACKAGE_PREFIX=${{ matrix.WEBOTS_PACKAGE_PREFIX }}
        docker build . --file dockerfiles/Dockerfile.cloud --tag $CLOUD_IMAGE_NAME:$IMAGE_TAG --build-arg WEBOTS_VERSION=$WEBOTS_VERSION --build-arg BASE_IMAGE=$IMAGE_NAME:$IMAGE_TAG
    - name: Log into registry
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username=${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Push image
      run: |
        docker tag $IMAGE_NAME:$IMAGE_TAG ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG
        docker tag $CLOUD_IMAGE_NAME:$IMAGE_TAG ${{ secrets.DOCKER_USERNAME }}/$CLOUD_IMAGE_NAME:$IMAGE_TAG
        docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG
        docker push ${{ secrets.DOCKER_USERNAME }}/$CLOUD_IMAGE_NAME:$IMAGE_TAG
  github-publication:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        BASE_IMAGE: ["nvidia/cuda:11.8.0-base-ubuntu22.04"]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Determine Version
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          CLOUD_IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$CLOUD_IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          CLOUD_IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          IMAGE_TAG=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,' | sed -e 's,\_.*,,')
          # Use Docker `latest` tag convention
          [ "$IMAGE_TAG" == "master" ] && IMAGE_TAG=latest
          # Webots version
          [ "$IMAGE_TAG" != "latest" ] && WEBOTS_VERSION=$IMAGE_TAG && IMAGE_TAG=$IMAGE_TAG-$(cut -d'-' -f3 <<<"${{ matrix.BASE_IMAGE }}")
          [ "$IMAGE_TAG" == "latest" ] && WEBOTS_VERSION=$DEFAULT_WEBOTS_VERSION
          # Display and save
          echo IMAGE_ID=$IMAGE_ID
          echo CLOUD_IMAGE_ID=$CLOUD_IMAGE_ID
          echo IMAGE_TAG=$IMAGE_TAG
          echo WEBOTS_VERSION=$WEBOTS_VERSION
          echo "IMAGE_ID=${IMAGE_ID}" >> $GITHUB_ENV
          echo "CLOUD_IMAGE_ID=${CLOUD_IMAGE_ID}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${IMAGE_TAG}-ubuntu${{ matrix.UBUNTU_VERSION }}" >> $GITHUB_ENV
          echo "WEBOTS_VERSION=${WEBOTS_VERSION}" >> $GITHUB_ENV
      - name: Build image
        run: |
          docker build . --file dockerfiles/Dockerfile.nvidia --tag $IMAGE_NAME:$IMAGE_TAG --build-arg WEBOTS_VERSION=$WEBOTS_VERSION --build-arg BASE_IMAGE=${{ matrix.BASE_IMAGE }} --build-arg WEBOTS_PACKAGE_PREFIX=${{ matrix.WEBOTS_PACKAGE_PREFIX }}
          docker build . --file dockerfiles/Dockerfile.cloud --tag $CLOUD_IMAGE_NAME:$IMAGE_TAG --build-arg WEBOTS_VERSION=$WEBOTS_VERSION --build-arg BASE_IMAGE=$IMAGE_NAME:$IMAGE_TAG
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_ID:$IMAGE_TAG
          docker push $IMAGE_ID:$IMAGE_TAG
          docker tag $CLOUD_IMAGE_NAME:$IMAGE_TAG $CLOUD_IMAGE_ID:$IMAGE_TAG
          docker push $CLOUD_IMAGE_ID:$IMAGE_TAG
